// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: srpc.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CallType int32

const (
	CallType_Request      CallType = 0
	CallType_Response     CallType = 1
	CallType_BidiStream   CallType = 2
	CallType_ClientStream CallType = 3
	CallType_ServerStream CallType = 4
	CallType_StreamClosed CallType = 5
)

// Enum value maps for CallType.
var (
	CallType_name = map[int32]string{
		0: "Request",
		1: "Response",
		2: "BidiStream",
		3: "ClientStream",
		4: "ServerStream",
		5: "StreamClosed",
	}
	CallType_value = map[string]int32{
		"Request":      0,
		"Response":     1,
		"BidiStream":   2,
		"ClientStream": 3,
		"ServerStream": 4,
		"StreamClosed": 5,
	}
)

func (x CallType) Enum() *CallType {
	p := new(CallType)
	*p = x
	return p
}

func (x CallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallType) Descriptor() protoreflect.EnumDescriptor {
	return file_srpc_proto_enumTypes[0].Descriptor()
}

func (CallType) Type() protoreflect.EnumType {
	return &file_srpc_proto_enumTypes[0]
}

func (x CallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallType.Descriptor instead.
func (CallType) EnumDescriptor() ([]byte, []int) {
	return file_srpc_proto_rawDescGZIP(), []int{0}
}

type StreamCmd int32

const (
	StreamCmd_SYN StreamCmd = 0
	StreamCmd_ACK StreamCmd = 1
	StreamCmd_PSH StreamCmd = 2
	StreamCmd_WND StreamCmd = 3
	StreamCmd_FIN StreamCmd = 4
)

// Enum value maps for StreamCmd.
var (
	StreamCmd_name = map[int32]string{
		0: "SYN",
		1: "ACK",
		2: "PSH",
		3: "WND",
		4: "FIN",
	}
	StreamCmd_value = map[string]int32{
		"SYN": 0,
		"ACK": 1,
		"PSH": 2,
		"WND": 3,
		"FIN": 4,
	}
)

func (x StreamCmd) Enum() *StreamCmd {
	p := new(StreamCmd)
	*p = x
	return p
}

func (x StreamCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_srpc_proto_enumTypes[1].Descriptor()
}

func (StreamCmd) Type() protoreflect.EnumType {
	return &file_srpc_proto_enumTypes[1]
}

func (x StreamCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamCmd.Descriptor instead.
func (StreamCmd) EnumDescriptor() ([]byte, []int) {
	return file_srpc_proto_rawDescGZIP(), []int{1}
}

type ProtoPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          CallType  `protobuf:"varint,1,opt,name=type,proto3,enum=rpc.CallType" json:"type,omitempty"`
	RequestId     uint64    `protobuf:"varint,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Route         string    `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`
	SerializeType int32     `protobuf:"varint,4,opt,name=serializeType,proto3" json:"serializeType,omitempty"`
	Data          []byte    `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	ErrCode       int32     `protobuf:"varint,6,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg        string    `protobuf:"bytes,7,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	StackTrace    string    `protobuf:"bytes,8,opt,name=stackTrace,proto3" json:"stackTrace,omitempty"`
	Header        []*Header `protobuf:"bytes,9,rep,name=header,proto3" json:"header,omitempty"`
}

func (x *ProtoPayload) Reset() {
	*x = ProtoPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_srpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPayload) ProtoMessage() {}

func (x *ProtoPayload) ProtoReflect() protoreflect.Message {
	mi := &file_srpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPayload.ProtoReflect.Descriptor instead.
func (*ProtoPayload) Descriptor() ([]byte, []int) {
	return file_srpc_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoPayload) GetType() CallType {
	if x != nil {
		return x.Type
	}
	return CallType_Request
}

func (x *ProtoPayload) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ProtoPayload) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ProtoPayload) GetSerializeType() int32 {
	if x != nil {
		return x.SerializeType
	}
	return 0
}

func (x *ProtoPayload) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ProtoPayload) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *ProtoPayload) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *ProtoPayload) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *ProtoPayload) GetHeader() []*Header {
	if x != nil {
		return x.Header
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_srpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_srpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_srpc_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Header) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ProtoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId     uint64    `protobuf:"varint,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Route         string    `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	SerializeType int32     `protobuf:"varint,3,opt,name=serializeType,proto3" json:"serializeType,omitempty"`
	Data          []byte    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Header        []*Header `protobuf:"bytes,5,rep,name=header,proto3" json:"header,omitempty"`
}

func (x *ProtoRequest) Reset() {
	*x = ProtoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_srpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRequest) ProtoMessage() {}

func (x *ProtoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_srpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRequest.ProtoReflect.Descriptor instead.
func (*ProtoRequest) Descriptor() ([]byte, []int) {
	return file_srpc_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoRequest) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ProtoRequest) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ProtoRequest) GetSerializeType() int32 {
	if x != nil {
		return x.SerializeType
	}
	return 0
}

func (x *ProtoRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ProtoRequest) GetHeader() []*Header {
	if x != nil {
		return x.Header
	}
	return nil
}

type ProtoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId uint64      `protobuf:"varint,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Error     *ProtoError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data      []byte      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProtoResponse) Reset() {
	*x = ProtoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_srpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoResponse) ProtoMessage() {}

func (x *ProtoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_srpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoResponse.ProtoReflect.Descriptor instead.
func (*ProtoResponse) Descriptor() ([]byte, []int) {
	return file_srpc_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoResponse) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ProtoResponse) GetError() *ProtoError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProtoResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode    int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg     string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	StackTrace string `protobuf:"bytes,3,opt,name=stackTrace,proto3" json:"stackTrace,omitempty"`
}

func (x *ProtoError) Reset() {
	*x = ProtoError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_srpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoError) ProtoMessage() {}

func (x *ProtoError) ProtoReflect() protoreflect.Message {
	mi := &file_srpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoError.ProtoReflect.Descriptor instead.
func (*ProtoError) Descriptor() ([]byte, []int) {
	return file_srpc_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoError) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *ProtoError) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *ProtoError) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

type ProtoStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd           StreamCmd   `protobuf:"varint,1,opt,name=cmd,proto3,enum=rpc.StreamCmd" json:"cmd,omitempty"`
	Window        int32       `protobuf:"varint,2,opt,name=window,proto3" json:"window,omitempty"`
	StreamId      int64       `protobuf:"varint,3,opt,name=streamId,proto3" json:"streamId,omitempty"`
	Error         *ProtoError `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Route         string      `protobuf:"bytes,5,opt,name=route,proto3" json:"route,omitempty"`
	SerializeType int32       `protobuf:"varint,6,opt,name=serializeType,proto3" json:"serializeType,omitempty"`
	Data          []byte      `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Header        []*Header   `protobuf:"bytes,8,rep,name=header,proto3" json:"header,omitempty"`
}

func (x *ProtoStream) Reset() {
	*x = ProtoStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_srpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoStream) ProtoMessage() {}

func (x *ProtoStream) ProtoReflect() protoreflect.Message {
	mi := &file_srpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoStream.ProtoReflect.Descriptor instead.
func (*ProtoStream) Descriptor() ([]byte, []int) {
	return file_srpc_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoStream) GetCmd() StreamCmd {
	if x != nil {
		return x.Cmd
	}
	return StreamCmd_SYN
}

func (x *ProtoStream) GetWindow() int32 {
	if x != nil {
		return x.Window
	}
	return 0
}

func (x *ProtoStream) GetStreamId() int64 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *ProtoStream) GetError() *ProtoError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProtoStream) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ProtoStream) GetSerializeType() int32 {
	if x != nil {
		return x.SerializeType
	}
	return 0
}

func (x *ProtoStream) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ProtoStream) GetHeader() []*Header {
	if x != nil {
		return x.Header
	}
	return nil
}

var File_srpc_proto protoreflect.FileDescriptor

var file_srpc_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70,
	0x63, 0x22, 0x96, 0x02, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa1, 0x01, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x22, 0x68, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x0a, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x22, 0xff, 0x01, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6d, 0x64, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2a, 0x6b, 0x0a, 0x08,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x69, 0x64, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10, 0x05, 0x2a, 0x38, 0x0a, 0x09, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x43, 0x6d, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x59, 0x4e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x53, 0x48, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x49,
	0x4e, 0x10, 0x04, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_srpc_proto_rawDescOnce sync.Once
	file_srpc_proto_rawDescData = file_srpc_proto_rawDesc
)

func file_srpc_proto_rawDescGZIP() []byte {
	file_srpc_proto_rawDescOnce.Do(func() {
		file_srpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_srpc_proto_rawDescData)
	})
	return file_srpc_proto_rawDescData
}

var file_srpc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_srpc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_srpc_proto_goTypes = []interface{}{
	(CallType)(0),         // 0: rpc.CallType
	(StreamCmd)(0),        // 1: rpc.StreamCmd
	(*ProtoPayload)(nil),  // 2: rpc.ProtoPayload
	(*Header)(nil),        // 3: rpc.Header
	(*ProtoRequest)(nil),  // 4: rpc.ProtoRequest
	(*ProtoResponse)(nil), // 5: rpc.ProtoResponse
	(*ProtoError)(nil),    // 6: rpc.ProtoError
	(*ProtoStream)(nil),   // 7: rpc.ProtoStream
}
var file_srpc_proto_depIdxs = []int32{
	0, // 0: rpc.ProtoPayload.type:type_name -> rpc.CallType
	3, // 1: rpc.ProtoPayload.header:type_name -> rpc.Header
	3, // 2: rpc.ProtoRequest.header:type_name -> rpc.Header
	6, // 3: rpc.ProtoResponse.error:type_name -> rpc.ProtoError
	1, // 4: rpc.ProtoStream.cmd:type_name -> rpc.StreamCmd
	6, // 5: rpc.ProtoStream.error:type_name -> rpc.ProtoError
	3, // 6: rpc.ProtoStream.header:type_name -> rpc.Header
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_srpc_proto_init() }
func file_srpc_proto_init() {
	if File_srpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_srpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_srpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_srpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_srpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_srpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_srpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_srpc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_srpc_proto_goTypes,
		DependencyIndexes: file_srpc_proto_depIdxs,
		EnumInfos:         file_srpc_proto_enumTypes,
		MessageInfos:      file_srpc_proto_msgTypes,
	}.Build()
	File_srpc_proto = out.File
	file_srpc_proto_rawDesc = nil
	file_srpc_proto_goTypes = nil
	file_srpc_proto_depIdxs = nil
}
